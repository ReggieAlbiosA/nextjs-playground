# * 📂 Git Workflow Commands (Solo Dev, Feature-Based)
{
# * ⚙  1️⃣ Setup & Configuration

# Set global user info (do this once)
git config --global user.name "Your Name"
git config --global user.email "you@example.com"

# Check your config
git config --list
}

{
# * 🏗  2️⃣ Create or Clone Repository

# Create new local repo (if starting fresh)
git init

# OR clone existing GitHub repo
git clone https://github.com/yourusername/your-repo.git
cd your-repo
}

{
# * 🌿  3️⃣ Branching (Feature-Focused Work)

# Create a new feature branch
git checkout -b feature/api-service-system

# Switch to an existing branch
git checkout main

# List all branches
git branch

# Merge a finished feature branch into main
git checkout main
git merge feature/api-service-system
💡 TIP: Work on each feature (auth, API, frontend) in its own branch for clean separation.
}

{
# * 📦  4️⃣ Staging & Committing Changes

# Check status of changes
git status

# Stage ALL changes
git add .

# Stage specific file
git add path/to/file

# Commit with message
git commit -m "Add new API service endpoints"

# Amend the last commit (if needed)
git commit --amend -m "Updated commit message"
}

{
# * 🌐  5️⃣ Remote Work (GitHub)

# Add GitHub remote (HTTPS or SSH)
git remote add origin https://github.com/yourusername/your-repo.git

# Push current branch + set upstream (first push)
git push -u origin feature/api-service-system

# Push updates (afterwards)
git push

# Pull latest changes from remote (stay synced)
git pull origin feature/api-service-system
}

{
# * 🛠  6️⃣ Undoing & Fixing Mistakes

# Unstage staged files
git reset HEAD .

# Discard local changes in a file
git checkout -- path/to/file

# Revert a specific commit (safe, makes new commit)
git revert commit_hash

# Hard reset to previous commit (DANGEROUS: wipes local changes!)
git reset --hard commit_hash

# Temporarily stash work (if you need to switch branches)
git stash
git stash pop  # bring stashed work back
}

{
# * 📈  7️⃣ Reviewing History & Changes

# View commit history
git log --oneline

# View changes (diff)
git diff

# View detailed log for a specific file
git log path/to/file
}